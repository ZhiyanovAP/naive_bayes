Проблема:
Сделать классификатор тональности текстовых сообщений (классифицировать эмоциональную окраску сообщений).

Как и с чем мы работали:
Python 3, Pandas, sklearn, PyMorphy2 (для нормализации слов русского словаря), cross-validation, Naive Bayes, (CountVectorizer, TensorFlowVectorizer);

Выборка:
Мы пользовались выборкой (http://study.mokoron.com/). Здесь мы получили 2 файла, состоящих из отрицательных и положительных отзывов (positive.csv, negative.csv) с дополнительной, ненужной нам, информацией.
Выборка была размечена с помощью метода, указанного на сайте. (Наша задача отличается от воссоздания алгоритма классификации неразмеченных данных. Мы используем размеченные алгоритмом данные, для предсказания эмоциональной окраски новых твитов, не опуская их в общую кучу и классифицируя их заново.)

Очищение данных:
Выборка состоит не только из предложений-текстов, но содержит доп. информацию (даты публикаций, имена пользователей). Мы избавляемся от этих данных. Далее мы удалили английские слова, избавились от пунктуации, приведение к общему регистру.

Модель:
Применили байесовский метод для разных способов векторизации текстовых данных (CountVectorizer, TensorFlowVectorizer), для разного количества слов в n-граммах с добавленными стоп-словами.

Точность:
Полученная точность на cross-validation (количество шагов валидации = 5) ~ 0.75.

Сложности:
При подсчете n-грамм возникли разреженные матрицы, которые сложно объединять с другими нетекстовми данными.
